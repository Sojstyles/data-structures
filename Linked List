
class Node():
    """ Creates a Node containing both the data to be stored and a pointer to the next node"""

    def __init__(self, val):
        # val is the information we're storing in the node
        self.val = val
        self.proceeding = None
        
    def get_val(self):
        return self.val
    
    def set_proceeding(self, node):
        # Sets the pointer to a specified node
        self.proceeding = node

    def get_proceeding(self):
        # Returns the pointer without changing the value
        return self.proceeding

#--------------------------------------------------------#    
    
class linkedList():
    """ Creates a linked list as a series of nodes"""
    
    def __init__(self):
        self.head = None
        
    def get_length(self):
        """ Returns the length of the list"""
        
        
        
    def insert(self, val):
        """ Creates a new node and inserts it into the list"""
        
    def delete(self, val):
        """ Deletes the first node containing val or raises an error if 
            val isn't contained in the list
        """

#--------------------------------------------------------#       
        
node1 = Node(5)
node2 = Node(10)
node1.set_after(node2)
print(node1.proceeding.val)

    
    

